#!/usr/bin/env python3
"""generate_gallery.py

Usage:
    python generate_gallery.py /path/to/png_dir

This script creates two files in the target directory:
- README.md : A Markdown gallery (3 columns) that is friendly for GitHub and VS Code preview
- index.html : A simple HTML gallery with CSS grid for nicer browser view

Both files use relative image paths so you can commit the folder and share with others.
"""
import sys
from pathlib import Path

COLS = 3

TEMPLATE_MD_HEAD = """# Image Gallery

This gallery was generated automatically by `generate_gallery.py`.

Open this file in VS Code (Markdown preview) or view `index.html` in a browser.

"""

TEMPLATE_HTML_HEAD = """<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <title>Image Gallery</title>
  <style>
    body { font-family: system-ui, -apple-system, Segoe UI, Roboto, "Helvetica Neue", Arial; padding: 18px; }
    h1 { margin-bottom: 6px; }
    .grid { display: grid; grid-template-columns: repeat(auto-fill, minmax(260px, 1fr)); gap: 12px; }
    .card { border: 1px solid #ddd; padding: 8px; background: #fff; border-radius: 6px; }
    .card img { width: 100%; height: auto; display:block; }
    .caption { font-size: 13px; color: #333; margin-top: 6px; }
    @media (max-width: 600px) { .grid { grid-template-columns: repeat(1, 1fr); } }
  </style>
</head>
<body>
  <h1>Image Gallery</h1>
  <p>Generated by <code>generate_gallery.py</code>.</p>
  <div class="grid">
"""

TEMPLATE_HTML_TAIL = """
  </div>
</body>
</html>
"""


def make_markdown_gallery(files, outpath: Path, cols=3):
    lines = [TEMPLATE_MD_HEAD]
    # Table header placeholder: we'll build rows of cols
    rows = []
    for i in range(0, len(files), cols):
        chunk = files[i:i+cols]
        # image row
        img_row = "| " + " | ".join(f"![{p.name}]({p.name})" for p in chunk) + " |"
        # caption row (names)
        cap_row = "| " + " | ".join(p.name for p in chunk) + " |"
        rows.append(img_row)
        rows.append(cap_row)
        # separator for nicer spacing
        rows.append("")
    lines.extend(rows)
    md = "\n".join(lines)
    (outpath / "README.md").write_text(md, encoding="utf-8")


def make_html_gallery(files, outpath: Path):
    lines = [TEMPLATE_HTML_HEAD]
    for p in files:
        card = f"    <div class=\"card\">\n      <img src=\"{p.name}\" alt=\"{p.name}\">\n      <div class=\"caption\">{p.name}</div>\n    </div>\n"
        lines.append(card)
    lines.append(TEMPLATE_HTML_TAIL)
    (outpath / "index.html").write_text("".join(lines), encoding="utf-8")


def main():
    if len(sys.argv) < 2:
        print("Usage: python generate_gallery.py /path/to/png_dir")
        return
    d = Path(sys.argv[1])
    if not d.exists() or not d.is_dir():
        print("Target path must be an existing directory")
        return
    pngs = sorted([p for p in d.iterdir() if p.suffix.lower() in ('.png','.jpg','.jpeg','.gif')])
    if not pngs:
        print("No images found in directory")
        return
    make_markdown_gallery(pngs, d, cols=COLS)
    make_html_gallery(pngs, d)
    print(f"Wrote README.md and index.html to: {d}")


if __name__ == '__main__':
    main()
